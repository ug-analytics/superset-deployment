apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/group.name: superset-internet-facing
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/inbound-cidrs: 0.0.0.0/0
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/certificate-arn:
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS13-1-2-Ext2-2021-06
    alb.ingress.kubernetes.io/load-balancer-attributes: |
      idle_timeout.timeout_seconds=3601,
      routing.http2.enabled=true,
    alb.ingress.kubernetes.io/load-balancer-name: superset-internet-facing
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/success-codes: 200-404
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/conditions.superset: '[{"Field":"host-header","HostHeaderConfig":{"Values":["*superset.userguiding.com"]}}]'
    ingress.kubernetes.io/rewrite-target: /
    meta.helm.sh/release-name: superset-deployment
    meta.helm.sh/release-namespace: superset
  name: superset-public-ingress
  namespace: superset
spec:
  ingressClassName: alb
  rules:
    - host: superset.userguiding.com
      http:
        paths:
          - backend:
              service:
                name: ssl-redirect
                port:
                  name: use-annotation
            path: /
            pathType: Prefix
          - backend:
              service:
                name: superset
                port:
                  name: http
            path: /
            pathType: Prefix
